---
- name: Add Docker Apt signing key
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Check if Docker Apt signing key is correct
  command: apt-key fingerprint 0EBFCD88
  register: docker_apt_key

- debug:
    msg: "{{ docker_apt_key }}"

- name: Get DEB architecture
  shell: dpkg --print-architecture
  register: deb_architecture

- name: Add docker repository
  apt_repository:
    repo: "deb [arch={{ deb_architecture.stdout }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present

- name: Install apt packages
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: latest
  loop:
    - python3-pip
    - python-yaml
    - git-core
    - apt-transport-https
    - ca-certificates
    - software-properties-common
    - net-tools
    - awscli
    - docker-ce
    - jq

- name: Upgrade pip3 packages
  pip:
    name:
      - boto3==1.16.34
      - awscli==1.18.194
    state: present
    executable: pip3

- name: Start docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: "Add {{ docker_users }} to docker group"
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  with_items:
    - "{{ docker_users }}"

- name: Install docker-compose for amd64
  pip:
    name: docker-compose==1.29.*
    state: present
    executable: pip3
  when: deb_architecture.stdout == 'amd64'

- name: Install docker-compose for arm64
  apt:
    name: docker-compose
    update_cache: yes
    state: latest
  when: deb_architecture.stdout == 'arm64'

- name: Symlink docker-compose for arm64
  file:
    src: /usr/bin/docker-compose
    dest: /usr/local/bin/docker-compose
    state: link
  when: deb_architecture.stdout == 'arm64'

- name: Copy daemon.json file
  copy:
    src: ../files/daemon.json
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify:
    - restart docker
